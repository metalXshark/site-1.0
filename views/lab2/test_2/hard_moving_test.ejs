<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/public/css/style_test_2.css">
    <title>Hard moving test</title>
</head>
<body>
<div id="bg" class="bg_img">
    <div class="top">
        <a href="/test_2">
            <img class="icon_back" src="public/img/back.png">
        </a>
        <a href="/login">
            <img class="icon_menu" src="public/img/menu.png">
        </a>
    </div>
    <div class="tester">
        <div id='Instruction' class="instruction text_instruction">
            Этот тест считывает скорость реакции на движущийся объект. Ваша цель - нажать на
            <b style="color: green">Numpad1</b>, <b style="color: red">Numpad2</b> или <b style="color: purple">Numpad3</b>
            как только медленный, средний или быстрый круг соответственно совместиться с белым.
        </div>
        <div id='Iteration' class="iteration"></div>
        <button id='Start_button' class="start_button" name="start" onclick="start_test()">Начать</button>
        <div class="moving-test" id="movingTest">
            <div class="moving-test__moving-dot-wrapper moving-test__moving-dot-wrapper_speed_low" id='slowMovingDot'>
                <div class="moving-test__moving-dot" style="background-color: green"></div>
            </div>
            <div class="moving-test__moving-dot-wrapper" id='middleMovingDot'>
                <div class="moving-test__moving-dot"></div>
            </div>
            <div class="moving-test__moving-dot-wrapper moving-test__moving-dot-wrapper_speed_high" id='fastMovingDot'>
                <div class="moving-test__moving-dot" style="background-color: purple"></div>
            </div>
            <div class="moving-test__fixed-dot" id="fixedDot"></div>
        </div>
        <div id='Result' class="result"></div>
        <a href="/hard_moving_test" class="restart_button" id='Retry'>Заново</a>
    </div>
</div>
<script>
    let iteration = 0;
    const NUMBER_OF_ITERATIONS = 30;

    //Результаты
    const resultList = {slow: [],
                        middle: [],
                        fast: []};

    function start_test() {
        setInterval(() => {
            iteration ++
            document.getElementById('Iteration').innerHTML = 'Попытка: ' + iteration +'/' + NUMBER_OF_ITERATIONS;
        }, 5000);
        document.getElementById('Instruction').style.display = 'none';
        document.getElementById('Start_button').style.display = 'none';
        document.getElementById('bg').style.background = 'black';
        document.getElementById('Iteration').style.display = 'block';
        document.getElementById('Result').style.display = 'block';
        document.getElementById('Iteration').innerHTML = 'Попытка: ' + iteration +'/' + NUMBER_OF_ITERATIONS;
        document.getElementById('movingTest').style.display = 'block';

        document.addEventListener('keydown', next_time);
    }

    function next_time(e) {
        switch (e.code) {
            case 'Numpad1':
                calculate_wrong('slow');
                break;
            case 'Numpad2':
                calculate_wrong('middle');
                break;
            case 'Numpad3':
                calculate_wrong('fast');
                break;
        }
    }
    
    function calculate_wrong(speed) {

        document.getElementById('Iteration').innerHTML = 'Попытка: ' + iteration +'/' + NUMBER_OF_ITERATIONS;

        let targetMovingDot = document.getElementById(speed + 'MovingDot');

        targetMovingDot.children[0].classList.remove('dot_highlight');

        let rotationalSpeed = 2 * Math.PI / window.getComputedStyle(targetMovingDot).animationDuration.slice(0, -1);

        let rotationalMatrix = window.getComputedStyle(targetMovingDot).transform
            .split('(')[1].split(')')[0].split(',');
        let angleTemp = Math.asin(rotationalMatrix[1]);
        let angle = Math.acos(rotationalMatrix[0]);
        angle = angleTemp > 0 ? -angle : angle;

        let wrong = angle / rotationalSpeed;
        if (wrong < 0.35 && wrong > -0.35){
            document.getElementById('Result').innerHTML = 'Ваш результат: ' + (wrong).toFixed(3) +' с';
            resultList[speed].push(wrong);
            targetMovingDot.children[0].classList.add('dot_highlight');
        } else {
            if (speed === "fast") {
                document.getElementById('Result').innerHTML = 'Ошибка!'
                document.getElementById('Result').style.color = 'purple'

            }
            if (speed === "middle") {
                document.getElementById('Result').innerHTML = 'Ошибка!'
                document.getElementById('Result').style.color = 'red'

            }
            if (speed === "slow") {
                document.getElementById('Result').innerHTML = 'Ошибка!'
                document.getElementById('Result').style.color = 'green'

            }
        }



        if (iteration === NUMBER_OF_ITERATIONS) finish_test();
    }
    
    function finish_test() {
        document.removeEventListener('keydown', next_time);

        let sd = {slow: 0,
                  middle: 0,
                  fast: 0};

        for (let result in resultList) {
            let dispersion = resultList[result].reduce((acc, number) => acc + Math.pow(number, 2), 0) / (resultList[result].length - 1);
            sd[result] = Math.sqrt(dispersion);
        }

        document.getElementById('movingTest').style.display = 'none';

        document.getElementById('Result').innerHTML = `Стандартное отклонение:<br>
                                                       медленный круг: ${sd['slow'].toFixed(3)} c,<br>
                                                       средний круг: ${sd['middle'].toFixed(3)} с,<br>
                                                       быстрый круг: ${sd['fast'].toFixed(3)} с,<br>
                                                       среднее по всем стандартным отклонениям: ${((sd['slow'] + sd['middle'] + sd['fast']) / 3).toFixed(3)} c.`;
        document.getElementById('Result').style.top = '30vh';

        document.getElementById('Retry').style.display = 'block';
        sendUser(); // TODO
    }

    // Sends test results to server
    //TODO
    async function sendUser() {
        const response = await fetch("/result", {
            method: "POST",
            body: JSON.stringify({
                username: "Tom", // TODO
                test: "hard_moving_test",
                TODO: "TODO"
            })
        });
        const responseText = await response.text();
        console.log(responseText);
    }
</script>
</body>
</html>