<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/public/css/style_test_4.css">
    <title>Document</title>
</head>
<body>
<div id="bg" class="bg_img">
    <div class="top">
        <a href="/tests_lab5">
            <img class="icon_back" src="/public/img/back.png">
        </a>
        <a href="/login">
            <img class="icon_menu" src="/public/img/menu.png">
        </a>
    </div>
    <div id ='Tester' class="tester">
        <div id='Instruction' class="instruction text_instruction">
            Этот тест оценивает вашу словесную память. Вам необходимо запомнить как можно больше слов и написать их в любом порядке.
        </div>
        <div id='Iteration' class="iteration"></div>
        <button id='Start_button' class="start_button" name="start" onclick="start_test()">Начать</button>
        <div id='Final Result' class="result"></div>
        <div id='Scene' class="scene">
            <div class="cell_verbal" id="cell1">1</div>
            <div class="cell_verbal" id="cell2">2</div>
            <div class="cell_verbal" id="cell3">3</div>
            <div class="cell_verbal" id="cell4">4</div>
            <div class="cell_verbal" id="cell5">5</div>
            <div class="cell_verbal" id="cell6">6</div>
            <div class="cell_verbal" id="cell7">7</div>
            <div class="cell_verbal" id="cell8">8</div>
            <div class="cell_verbal" id="cell9">9</div>
            <div class="cell_verbal" id="cell10">10</div>
            <div class="cell_verbal" id="cell11">11</div>
            <div class="cell_verbal" id="cell12">12</div>
            <div class="cell_verbal" id="cell13">13</div>
            <div class="cell_verbal" id="cell14">14</div>
            <div class="cell_verbal" id="cell15">15</div>
            <div class="cell_verbal" id="cell16">16</div>
        </div>
        <button id='Finish_button' class="restart_button" name="finish" onclick="onAnswer()" style="top: 10vh">Готово</button>
        <a href="/verbal_memory" class="restart_button" id='Retry'>Заново</a>
    </div>
</div>
<script src="/public/libs/CookieManager.js"></script>
<script>
    //const dictionary = ['яблоко', 'лампа', 'книга', 'чайник', 'птица', 'ручка', 'ноутбук', 'дерево', 'телефон', 'велосипед', 'солнце', 'гитара', 'зеркало', 'стол', 'гриб', 'плащ', 'замок', 'ножницы', 'карандаш', 'бутылка', 'стул', 'пылесос', 'рубашка', 'банан', 'компьютер', 'коньки', 'губка', 'торт', 'ковер', 'кот', 'пальто', 'кувшин', 'молоток', 'термос', 'кресло', 'доска', 'клавиатура', 'шкаф', 'шапка', 'тумбочка', 'стакан', 'тарелка', 'бумага', 'картон', 'паспорт', 'морковь', 'рыба', 'ложка', 'вилка', 'нож', 'подушка', 'медведь', 'коса', 'лопата', 'сковорода', 'масло', 'свеча', 'нитки', 'ковер', 'цветок', 'молоко', 'банк', 'тетрадь', 'динамик', 'гольф', 'микрофон', 'наушники', 'щетка', 'паста', 'колесо', 'шар', 'корзина', 'гамак', 'мангал', 'кольцо', 'кисть', 'печенье', 'картошка', 'лаванда', 'носки', 'шнурки', 'часы', 'юбка', 'белье', 'дверь', 'окно']
    const dictionary
    const WAIT_TIME = 5000; //time in ms to show the words
    const maxIteration = 5;
    const resultList = [];

    let iteration = 0;

    let selectedWords = []
    let isDuringTest = false;
    let score = 0;

    function shuffle(array) {
        let currentIndex = array.length,
            temporaryValue, randomIndex;

        // While there remain elements to shuffle...
        while (0 !== currentIndex) {

            // Pick a remaining element...
            randomIndex = Math.floor(Math.random() * currentIndex);
            currentIndex -= 1;

            // And swap it with the current element.
            temporaryValue = array[currentIndex];
            array[currentIndex] = array[randomIndex];
            array[randomIndex] = temporaryValue;
        }

        return array;
    }

    function onAnswer() {
        score = 0;
        for (const child of children) {
            let answer = child.innerHTML.toLowerCase();
            if (selectedWords.includes(answer)) {
                score++;
                selectedWords.splice(selectedWords.indexOf(answer), 1);
            }
        }
        resultList.push(score);
        if (iteration !== maxIteration) {
            start_test();
        } else {
            iteration++;
            finish_test();
        }
    }

    const container = document.querySelector('.scene');
    const children = [...container.children];
    function start_test() {
        iteration++;
        isDuringTest = true;
        document.getElementById('Instruction').style.display = 'none';
        document.getElementById('Start_button').style.display = 'none';
        document.getElementById('bg').style.background = 'black';
        document.getElementById('Scene').style.display = 'block';
        document.getElementById('Finish_button').style.display = 'none';
        document.getElementById('Iteration').style.display = 'block';
        document.getElementById('Iteration').innerHTML = 'Попытка: ' + iteration + '/' + maxIteration;

        shuffle(children);
        for (const child of children) {
            container.appendChild(child);
        }
        shuffle(dictionary);
        let cursor = 0;
        for (const child of children) {
            cursor++;
            selectedWords.push(dictionary[cursor]);
            child.innerHTML = dictionary[cursor];
        }
        setTimeout(fillAnswers, WAIT_TIME)
    }

    function fillAnswers() {
        for (const child of children) {
            child.innerHTML = "";
            child.contentEditable = "true";
        }
        document.getElementById('Finish_button').style.display = 'block';
    }

    function finish_test() {
        isDuringTest = false;
        document.getElementById('Final Result').style.display = 'block';
        document.getElementById('Finish_button').style.display = 'none';
        document.getElementById('Scene').style.display = 'none';
        document.getElementById('Retry').style.display = 'block';
        let sum = 0;
        for (let i of resultList) {
            i = parseInt(i);
            sum += i;
        }
        let percentageOfCorrectAnswers = ((sum / 16)/ maxIteration) * 100;
        document.getElementById('Final Result').innerHTML = 'Число правилных ответов: ' + percentageOfCorrectAnswers.toFixed(2) + "%";
        sendUser(percentageOfCorrectAnswers.toFixed(2));
    }

    // Sends test results to server
    async function sendUser(percentage) {
        const response = await fetch("/result", {
            method: "POST",
            body: JSON.stringify({
                username: getCookie("login"),
                test: "verbal_memory",
                percentage: percentage.toString()
            })
        });
        const responseText = await response.text();
        console.log(responseText);
    }

</script>
</body>
</html>